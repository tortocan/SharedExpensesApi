// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedExpenses.Storage;

#nullable disable

namespace SharedExpenses.Storage.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220511140002_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApplicationUserExpenseGroup", b =>
                {
                    b.Property<int>("ExpenseGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ExpenseGroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicationUserExpenseGroup");
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.Expense", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseGroupId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ExpenseGroupId", "PaymentId");

                    b.HasIndex("ExpenseGroupId");

                    b.HasIndex("PaymentId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.ExpenseGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExpenseGroup");
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ApplicationUserExpenseGroup", b =>
                {
                    b.HasOne("SharedExpenses.Storage.Models.ExpenseGroup", null)
                        .WithMany()
                        .HasForeignKey("ExpenseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedExpenses.Storage.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.Expense", b =>
                {
                    b.HasOne("SharedExpenses.Storage.Models.ExpenseGroup", "ExpenseGroup")
                        .WithMany("Expense")
                        .HasForeignKey("ExpenseGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedExpenses.Storage.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedExpenses.Storage.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseGroup");

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SharedExpenses.Storage.Models.ExpenseGroup", b =>
                {
                    b.Navigation("Expense");
                });
#pragma warning restore 612, 618
        }
    }
}
